/*
 * Create_spec.c
 *
 *  Created on: 7 мая 2016 г.
 *      Author: Копраныч
 */

#include "Create_spec.h"

#define INPUT_ARRAY_LEN 40
#define TYPE_INT 4

int device_spec(char *name, int number)
{
	FILE *sp; // создаем указатель на структуру типа FILE
	assert(strlen(name) < INPUT_ARRAY_LEN);
	assert(TYPE_INT == sizeof(number));
	device specif[number]; //создаем массив структур типа device с именем specif и размером size_struct
	int i = 0; // обьявляем интовую переменную
	const char *extention = ".txt"; //сохраняем расширение будущего файла спецификации

	if ((sp = fopen(strcat(name, extention), "a+")) == NULL) //создаем/открывем фаил в режиме записи/чтения с именем и присваиваем ему расширение
	{ //с помощью функции strcat(главное обеспечить расширению достаточно места)если фаил создался без ошибок то продолжаем,иначе
		assert (sp);
		printf("ERROR\n");          //иначе произошла ошибка
		exit(1);          //выходим
	}

	while (i < number)   // задаем предел создания элементов в спецификации
	{

		scanf("%s %d", specif[i].element, &(specif[i].number)); //читаем вводимую инфу в элементы i-той структуры

		if (!(strcmp("commit_spec", specif[i].element))) //проверяем если один из введенных значений "commit_spec"
		{
			break;          // то заканчиваем ввод данных
		}
		else          //иначе
		{
			fprintf(sp, "%s %d\n", specif[i].element, specif[i].number); //выводим данные в фаил
			assert (sp);
		}
		i++;          //переходим к следующей i-той структуре
	}

	printf("spec was commited\n"); //когда закончили вводить данные печатаем на экран "spec was commited"
	fclose(sp);          //закрываем поток файлов
	return 0;          //
}

int complect(char *name, int number)
{
	FILE *sp;

	int i = 0;
	const char *extention = ".txt"; //сохраняем расширение будущего файла спецификации

	if ((sp = fopen(strcat(name, extention), "a+")) == NULL)
	{
		assert (sp);
		printf("ERROR\n");
		exit(1);
	}
	device specif[number];
	while (fscanf(sp, "%s %d", specif[i].element, &(specif[i].number)) != EOF)
	{
		assert (sp);
		fprintf(stdout, "%s %d", specif[i].element, specif[i].number);
		fprintf(stdout, "\r\n");
		i++;
	}
	fclose(sp);
	return 0;
}
