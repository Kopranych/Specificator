/*
 * logger.h

 *
 *  Created on: 13 апр. 2016 г.
 *      Author: Копраныч
 */
//Программа-журнал которая записывает в отдельный фаил все события произошедшие при выполнении другой программы

#ifndef LOG_H
#define LOG_H


typedef struct //Создаем новый тип в виде структуры с именем Log
{ //структура имеет 4 указателя на 4 функции
	void (*debug)(const char* message); //
	void (*info)(const char* message); //
	void (*warning)(const char* message); //
	void (*error)(const char* message); //
}Log;

////////////////////////////////Функции///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Log* get_logger(char *file_name); //обьявляем функцию которая инициализирует структуру типа Log функциями записи в фаил и возвращает указатель не эту структуру
static void write_message(char* prefix, const char* message); //функция записывает в журнал принятые сообщения с префиксом типа сообщения и временем записи этого сообщения
static void write_debug(const char* message); //Добовляет к принятому сообщению префикс(debug, info, warning, error) какого типа это сообщения
static void write_info(const char* message); //и вызывает функцию записи в журнал
static void write_warning(const char* message); //Добовляет к принятому сообщению префикс(debug, info, warning, error) какого типа это сообщения
static void write_error(const char* message); //и вызывает функцию записи в журнал

#endif LOG_H

